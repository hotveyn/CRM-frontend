import{y as a,t as d,v as c}from"./index-4abd5337.js";function i(){return{async getAll(){return(await a.get("order-type")).data},async getOne(e){return(await a.get(`order-type/${e}`)).data},async create(e){return(await a.post("order-type",e)).data},async update(e,r){return(await a.patch(`order-type/${e}`,r)).data},async remove(e){return(await a.delete(`order-type/${e}`)).data}}}const n=i(),t=d(),y=c("TableOrderTypes",{state:()=>({orderTypes:[]}),actions:{async request(){this.orderTypes=await n.getAll()},async getForSelect(){return await this.request(),this.orderTypes.map(e=>({label:e.name,value:e.id}))},async create(e){await n.create(e).then(()=>{t.orderType.created()}).catch(r=>{t.error.custom(r.response.data.message)})},async update(e,r){console.log("store",e,r),await n.update(e,r).then(()=>{t.orderType.updated();const s=this.orderTypes.findIndex(o=>o.id===e);s!==-1&&(this.orderTypes[s].name=r.name)}).catch(s=>{t.error.custom(s.response.data.message)})},async findById(e){return await this.request(),this.orderTypes.find(r=>r.id===e)},async remove(e){await n.remove(e).then(()=>{t.orderType.removed(),this.orderTypes=this.orderTypes.filter(r=>r.id!==e)}).catch(r=>{t.error.custom(r.response.data.message)})}},getters:{selected(){return this.orderTypes.map(e=>({label:e.name,value:e.id}))}}});export{y as u};
